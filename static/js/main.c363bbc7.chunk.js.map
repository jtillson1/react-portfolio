{"version":3,"sources":["assets sync /^/.//.*/.png$","assets/grad-5.jpg","assets/Portfolio/0.png","assets/Portfolio/1.png","assets/Portfolio/2.png","assets/Portfolio/3.png","assets/Portfolio/4.png","assets/Portfolio/5.png","assets/headerrrrr.png","assets/resume.pdf","components/about/index.js","utils/helpers.js","components/nav/index.js","components/modal/index.js","components/PhotoList/index.js","components/gallery/index.js","components/contact/index.js","components/resume/index.js","App.js","serviceWorker.js","index.js","assets/resume.png"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","About","className","src","coverImage","style","width","alt","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","currentCategory","contactSelected","setContactSelected","useEffect","document","title","name","data-testid","href","role","aria-label","onClick","category","key","Modal","onClose","currentPhoto","description","index","github","deploy","useState","require","type","PhotoList","currentPhotos","filter","photo","setCurrentPhoto","isModalOpen","setIsModalOpen","toggleModal","image","i","Gallery","ContactForm","errorMessage","setErrorMessage","email","message","formState","setFormState","handleChange","target","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","placeholder","defaultValue","onBlur","rows","Resume","download","resumeImg","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c363bbc7.chunk.js","sourcesContent":["var map = {\n\t\"./Portfolio/0.png\": 402,\n\t\"./Portfolio/1.png\": 403,\n\t\"./Portfolio/2.png\": 404,\n\t\"./Portfolio/3.png\": 405,\n\t\"./Portfolio/4.png\": 406,\n\t\"./Portfolio/5.png\": 407,\n\t\"./headerrrrr.png\": 408,\n\t\"./resume.png\": 67\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 114;","module.exports = __webpack_public_path__ + \"static/media/grad-5.0539c7aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/0.4445ecb9.png\";","module.exports = __webpack_public_path__ + \"static/media/1.7ceb96dd.png\";","module.exports = __webpack_public_path__ + \"static/media/2.fef84176.png\";","module.exports = __webpack_public_path__ + \"static/media/3.5bd2dec3.png\";","module.exports = __webpack_public_path__ + \"static/media/4.b20c69ee.png\";","module.exports = __webpack_public_path__ + \"static/media/5.10fd70d8.png\";","module.exports = __webpack_public_path__ + \"static/media/headerrrrr.443359bf.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.33f420cf.pdf\";","import React from 'react';\nimport coverImage from \"../../assets/grad-5.jpg\";\nfunction About() {\n  return (\n    <section className=\"my-5\">\n    <h1 id=\"about\">Jess Tillson</h1>\n    <img src={coverImage} className=\"my-2\" style={{ width: \"100%\" }} alt=\"cover\" />\n  </section>\n  );\n}\n\nexport default About;","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\n\nfunction Nav(props) {\n    const {\n        categories = [],\n        setCurrentCategory,\n        currentCategory,\n        contactSelected,\n        setContactSelected\n    } = props;\n    \n    useEffect(() => {\n        document.title = capitalizeFirstLetter(currentCategory.name);\n    }, [currentCategory]);\n    return (\n        <header className=\"flex-row px-1\">\n            <h2>\n                <a data-testid=\"link\" href=\"/\">\n                    <span role=\"img\" aria-label=\"camera\"></span> Jess Tillson\n        </a>\n            </h2>\n            <nav>\n                <ul className=\"flex-row\">\n                    <li className=\"mx-2\">\n                        <a data-testid=\"about\" href=\"#about\" onClick={() => setContactSelected(false)}>\n                            About me\n            </a>\n                    </li>\n                    {/*If the value of contactSelected is true, which means \n                    that the user selected Contact, we want to add the CSS class \n                    navActive, which will illuminate the background.*/}\n                    <li className={`mx-2 ${contactSelected && 'navActive'}`}>\n                        <span onClick={() => setContactSelected(true)}>Contact</span>\n                    </li>\n                    {categories.map((category) => (\n                        <li\n                            className={`mx-1 ${currentCategory.name === category.name && !contactSelected && `navActive`\n                                }`}\n                            key={category.name}\n                        >\n                            <span\n                                onClick={() => {\n                                    setCurrentCategory(category);\n                                    setContactSelected(false);\n                                }}\n                            >\n                                {capitalizeFirstLetter(category.name)}\n                            </span>\n                        </li>\n                        \n                    ))}\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Nav;","import React, { useState } from 'react';\n\n\nconst Modal = ({ onClose, currentPhoto }) => {\n    // destructure currentPhoto properties into constants to \n    // assign their values into the modal\n    const { name, category, description, index, github, deploy } = currentPhoto;\n    //set the initial state of isModalOpen to false, \n    // because we don't want the modal to open until a user has \n    // clicked on an image.\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n\n    return (\n        <div className=\"modalBackdrop\">\n            <div className=\"modalContainer\">\n                <h3 className=\"modalTitle\">{name}</h3>\n                <img src={require(`../../assets/${category}/${index}.png`)} alt=\"current category\" />\n                <p>{description}</p>\n                <button onClick={onClose} type=\"button\">\n                    Close this modal\n          </button>\n          <a href={github}><button className=\"linkBtn\">Github Repo</button></a>    \n          <a href={deploy}><button className=\"linkBtn\">View Live</button></a>    \n            </div>\n        </div>\n    );\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from '../modal';\n\nconst PhotoList = ({ category }) => {\n\n  const [photos] = useState([\n    {\n      name: 'Food Festival',\n      category: 'Portfolio',\n      github: 'https://github.com/jtillson1/food-festival',\n      deploy: 'https://jtillson1.github.io/food-festival'\n    },\n    {\n      name: 'Note Taker',\n      category: 'Portfolio',\n      github:'https://jtillson1.github.io/note-taker',\n      deploy: 'https://vu-note-taker.herokuapp.com/'\n    },\n    {\n      name: 'Run Buddy',\n      category: 'Portfolio',\n      github: 'https://github.com/jtillson1/run-buddy',\n      deploy:'https://jtillson1.github.io/run-buddy'\n    },\n    {\n      name: 'SpeakEasy',\n      category: 'Portfolio',\n      github:  'https://github.com/adamkeyser45/thespeakeasy',\n      deploy: 'https://fierce-forest-64673.herokuapp.com/'\n    },\n    {\n      name: 'Taskinator',\n      category: 'Portfolio',\n      github: 'https://github.com/jtillson1/Taskinator',\n      deploy: 'https://jtillson1.github.io/Taskinator/'\n    },\n    {\n      name: 'WeatherMan',\n      category: 'Portfolio',\n      github:'https://github.com/jtillson1/weatherman',\n      deploy:'https://jtillson1.github.io/weatherman/'\n    },\n  ]);\n\n  const currentPhotos = photos.filter((photo) => photo.category === category);\n  const [currentPhoto, setCurrentPhoto] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  //toggleModal is the click handler \n  const toggleModal = (image, i) => {\n    setCurrentPhoto({ ...image, index: i });\n    setIsModalOpen(!isModalOpen);\n  }\n\n  return (\n    <div>\n      {isModalOpen && (\n        <Modal currentPhoto={currentPhoto} onClose={toggleModal} />\n      )}\n      <div className=\"flex-row\">\n        {currentPhotos.map((image, i) => (\n          <img\n            src={require(`../../assets/${category}/${i}.png`)}\n            alt={image.name}\n            className=\"img-thumbnail mx-1\"\n            //click handler is called toggleModal\n            onClick={() => toggleModal(image, i)}\n            key={image.name}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoList;\n","import { cleanup, render } from '@testing-library/react';\nimport React from 'react';\nimport { capitalizeFirstLetter } from '../../utils/helpers';\nimport PhotoList from '../PhotoList';\n\n\nfunction Gallery({ currentCategory }) {\n    const { name, description } = currentCategory;\n\n    return (\n        <section>\n            <h1 data-testid=\"h1tag\">{capitalizeFirstLetter(name)}</h1>\n            <p>{description}</p>\n            <PhotoList category={currentCategory.name} />\n        </section>\n    );\n}\n\nexport default Gallery;","import React, { useState } from 'react'\nimport { validateEmail } from '../../utils/helpers';\n\n\nfunction ContactForm() {\n    const [errorMessage, setErrorMessage] = useState('');\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n\n    function handleChange(e) {\n        //validate the email information\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            // isValid conditional statement\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n            } else {\n                setErrorMessage('');\n            }\n        } else { //vallidate the other inputs\n            if (!e.target.value.length) {\n                setErrorMessage(`${e.target.name} is required.`);\n            } else {\n                setErrorMessage('');\n            }\n        }\n        //The name property of target in this expression actually \n        //refers to the name attribute of the form element.\n        if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n        }\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    }\n    return (\n        <section className=\"contact\">\n            <h1>Contact Me</h1>\n            <form id=\"contact-form\" onSubmit={handleSubmit}>\n                <input type=\"text\" id=\"formInput\" placeholder=\"Name\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n                <input type=\"email\" placeholder=\"Email\" id=\"formInput\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n                <div>\n                    <textarea placeholder=\"What do you want to say...\" name=\"message\" id=\"formInput\" defaultValue={message} onBlur={handleChange} rows=\"5\" />\n                </div>\n                {errorMessage && (\n                    <div>\n                        <p className=\"error-text\">{errorMessage}</p>\n                    </div>\n                )}\n                <button type=\"submit\">Submit</button>\n            </form>\n        </section>\n    )\n\n}\n\nexport default ContactForm;","import React from 'react';\nimport resumeImg from \"../../assets/resume.png\";\nimport DownloadLink from \"react-download-link\";\n\nfunction Resume() {\n\n\n    return (\n        <section>\n\n            <a href={require(\"../../assets/resume.pdf\")} download>\n                <button className=\"resumeDownload\">\n                    Download Resume\n                </button>\n            </a>\n\n\n\n            <div className=\"resumeImg\">\n                <img src={resumeImg}></img>\n            </div>\n        </section>\n    );\n}\n\n\nexport default Resume;","//This App.js file is the center of the application. \n// Think of App.js as the root component, or the wrapper \n// component that houses all of the other components. To \n// effect any change on the application, we need to either \n// modify this file or add components inside it.\nimport React, { useState } from 'react';\nimport About from './components/about';\nimport Nav from './components/nav';\nimport Gallery from './components/gallery';\nimport ContactForm from './components/contact';\nimport Resume from './components/resume';\nfunction App() {\n  const [contactSelected, setContactSelected] = useState(false);\n  const [categories] = useState([\n    {\n      name: 'Portfolio',\n      description: 'Screengrabs of projects with links to their deployment',\n    },\n    {\n      name: 'Resume',\n      \n    }\n  ]);\n\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n\n  return (\n    <div>\n      <Nav\n       categories={categories}\n       setCurrentCategory={setCurrentCategory}\n       currentCategory={currentCategory}\n       contactSelected={contactSelected}\n       setContactSelected={setContactSelected}\n      ></Nav>\n      <main>\n    {/* // this is a \"ternary operator\" */}\n        <div>{!contactSelected ? ( \n          <> {/*Although in JSX you can only return a single parent element, this rule can be satisfied by wrapping the children components in a React fragmen */}\n            <Gallery currentCategory={currentCategory}></Gallery>\n            <Resume></Resume>\n            <About></About>\n            \n          </>\n        ) : // << this means else \n          ( \n            <ContactForm></ContactForm>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/resume.d83f534b.png\";"],"sourceRoot":""}